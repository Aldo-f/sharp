(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{224:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"autocompletelist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#autocompletelist","aria-hidden":"true"}},[t._v("#")]),t._v(" AutocompleteList")]),t._v(" "),a("p",[t._v("Class: "),a("code",{staticClass:"inline"},[t._v("Code16\\"),a("span",{staticClass:"token package"},[t._v("Sharp"),a("span",{staticClass:"token punctuation"},[t._v("\\")]),t._v("Form"),a("span",{staticClass:"token punctuation"},[t._v("\\")]),t._v("Fields"),a("span",{staticClass:"token punctuation"},[t._v("\\")]),t._v("SharpFormAutocompleteListField")])])]),t._v(" "),a("p",[t._v("This one is seems a little strange. The goal is to build a List with only one field in each item, an Autocomplete.")]),t._v(" "),a("p",[t._v("First let's see a use case: imagine you want to handle a list of "),a("code",{staticClass:"inline"},[t._v("winners")]),t._v(" by selecting them in a big list of Players, for which an remote Autocomplete is the best choice (otherwise you could have opted for a Tags Field).")]),t._v(" "),a("p",[t._v("You can in fact define the list as this:")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[t._v("SharpFormAutocompleteListField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"winners"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setLabel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"Winners"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setItemField")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            SharpFormAutocompleteField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"item"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"remote"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRemoteEndpoint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"/players"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"tip custom-block"},[a("p",[t._v("The key of the Autocomplete, "),a("code",{staticClass:"inline"},[t._v("item")]),t._v(" here, could be anything you want, as soon you stay consistent in the "),a("code",{staticClass:"inline"},[a("span",{staticClass:"token function"},[t._v("buildFormLayout")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")])]),t._v(" part.")])]),t._v(" "),a("p",[t._v("But why can't we use a classic List for this? Well, the "),a("code",{staticClass:"inline"},[t._v("model"),a("span",{staticClass:"token operator"},[t._v("-")]),a("span",{staticClass:"token operator"},[t._v(">")]),a("span",{staticClass:"token property"},[t._v("winners")])]),t._v(" relation is N-N, here ("),a("code",{staticClass:"inline"},[t._v("belongsToMany")]),t._v("), but Lists are meant to handle 1-N relationships ("),a("code",{staticClass:"inline"},[t._v("hasMany")]),t._v("). Here we want one field, the Autocomplete, to represent the whole item object.")]),t._v(" "),a("h2",{attrs:{id:"configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration","aria-hidden":"true"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),a("p",[t._v("Configuration is the same as the classic "),a("router-link",{attrs:{to:"/pages/form-fields/list.html"}},[t._v("List")]),t._v(", except for:")],1),t._v(" "),a("h3",{attrs:{id:"setitemfield-sharpformautocompletefield-field"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setitemfield-sharpformautocompletefield-field","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("code",{staticClass:"inline"},[a("span",{staticClass:"token function"},[t._v("setItemField")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("SharpFormAutocompleteField "),a("span",{staticClass:"token variable"},[t._v("$field")]),a("span",{staticClass:"token punctuation"},[t._v(")")])])]),t._v(" "),a("p",[t._v("You can use this function instead of "),a("code",{staticClass:"inline"},[t._v("addItemField")]),t._v(", since items of AutocompleteList have only one field.")]),t._v(" "),a("h3",{attrs:{id:"additemfield-sharpformfield-field"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#additemfield-sharpformfield-field","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("code",{staticClass:"inline"},[a("span",{staticClass:"token function"},[t._v("addItemField")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("SharpFormField "),a("span",{staticClass:"token variable"},[t._v("$field")]),a("span",{staticClass:"token punctuation"},[t._v(")")])])]),t._v(" "),a("p",[t._v("Simply know that this method is an alias for "),a("code",{staticClass:"inline"},[a("span",{staticClass:"token function"},[t._v("setItemField")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")])]),t._v(", meaning that y ou can only pass an Autocomplete, and it can only be called once.")]),t._v(" "),a("h2",{attrs:{id:"formatter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#formatter","aria-hidden":"true"}},[t._v("#")]),t._v(" Formatter")]),t._v(" "),a("h3",{attrs:{id:"tofront"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tofront","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("code",{staticClass:"inline"},[t._v("toFront")])]),t._v(" "),a("p",[t._v("Well, you must provide an array or Collection (same as for a List, see "),a("router-link",{attrs:{to:"/pages/form-fields/list.html"}},[t._v("related documentation")]),t._v(") of models with at least attributes designated by templates for the Autocomplete (see "),a("router-link",{attrs:{to:"/pages/form-fields/autocomplete.html"}},[t._v("related documentation")]),t._v(").")],1),t._v(" "),a("h3",{attrs:{id:"formfront"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#formfront","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("code",{staticClass:"inline"},[t._v("formFront")])]),t._v(" "),a("p",[t._v("Returns the selected item id.")])])},[],!1,null,null,null);s.default=n.exports}}]);